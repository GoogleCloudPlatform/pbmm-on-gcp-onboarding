stages:
- stage: network_hub_spoke
  displayName: 'network_hub_spoke terraform'

  jobs:
  - job: deployhubspoke
    displayName: 'Deploy Hub and Spoke'
    steps:
    - download: current
      artifact: EnvArtifact
      displayName: 'Download Env Artifact'
    - template: ../templates/securefile-template.yaml
    - script: |
        echo "Cleaning the current environment..."
        rm -rf $(Build.SourcesDirectory)/*

        echo "Moving downloaded artifacts to the source directory..."
        mv $(Pipeline.Workspace)/EnvArtifact/* $(Build.SourcesDirectory)/
        mv $(Pipeline.Workspace)/EnvArtifact/.* $(Build.SourcesDirectory)/ 2> /dev/null || true

        echo "Current environment contents:"
        ls -l $(Build.SourcesDirectory)/
        echo "Checking if 1-org exists and listing contents:"
        if [ -d "$(Build.SourcesDirectory)/1-org" ]; then
          ls -l $(Build.SourcesDirectory)/1-org/
        else
          echo "1-org directory not found."
        fi
        echo "Whole env list from sources directory:"
        echo "list 1-org"
        ls -l 1-org/

        ls -l $(Build.SourcesDirectory)/
        echo "Terraform version :"
        terraform version
        echo "tf v1.6"
        wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
        unzip terraform_1.6.0_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        sudo chmod +x /usr/local/bin/terraform
        echo "Terraform version :"
        terraform version
        echo "list bootstrap"
        ls -l 1-org/
        echo "list hubandspoke"
        ls -l 3-networks-hub-and-spoke/
        echo "set exec permission"
        chmod +x ./automation-scripts/3-networks-hub-and-spoke/3-networks-hub-and-spoke.sh
        echo "which sa is activated"
        gcloud auth list
        gcloud auth activate-service-account sa-gcp-partners-test@sa-test-gcp.iam.gserviceaccount.com --key-file=$(googleCredentials.secureFilePath)
        gcloud config set project sa-test-gcp
        echo "which sa is activated"
        gcloud auth list
        export GOOGLE_APPLICATION_CREDENTIALS=$(googleCredentials.secureFilePath)
        echo $GOOGLE_APPLICATION_CREDENTIALS
        echo "Executing 3-networks-hub-and-spoke.sh:"
        python3 ./fix_tfvars_symlinks.py .
        ./automation-scripts/3-networks-hub-and-spoke/3-networks-hub-and-spoke.sh
      displayName: 'Replace and Confirm Environment'

    - publish: $(System.DefaultWorkingDirectory)
      artifact: HubArtifact
      displayName: 'Publish Hub and spoke Environment'

